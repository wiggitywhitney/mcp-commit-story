# Task ID: 16
# Title: Rename Python Package from 'mcp_journal' to 'mcp_commit_story'
# Status: pending
# Dependencies: 3
# Priority: high
# Description: Rename the Python package from 'mcp_journal' to 'mcp_commit_story' to align with the repository name, including all necessary code and configuration updates to maintain functionality.
# Details:
This task involves a straightforward package rename to ensure consistency between the codebase and repository name. The developer should:

1. Rename the source directory from 'src/mcp_journal/' to 'src/mcp_commit_story/'
2. Update all import statements throughout the codebase, including:
   - Internal imports within the package
   - Import statements in test files
   - Any examples or documentation code
3. Modify pyproject.toml to reflect the new package name, including:
   - Package metadata (name) in [project] section
   - Entry points in [project.scripts] section
4. Update any references in README.md and other documentation
5. Update configuration files like .mcp-journalrc.yaml to reflect the new name
6. Check for hardcoded references to the package name in:
   - CLI commands
   - Configuration files
   - Environment variables
   - Log messages
7. Update any CI/CD configuration files (.github/workflows, etc.) that reference the package name
8. Ensure compatibility with Task 3 (Git Utilities)

This rename should be done early in the development process to minimize technical debt.

# Test Strategy:
To verify the successful completion of this task:

1. Run a comprehensive search across the codebase to ensure no instances of 'mcp_journal' remain:
   ```
   grep -r "mcp_journal" --include="*.py" --include="*.md" --include="*.toml" --include="*.yaml" .
   ```

2. Verify the package can be installed correctly:
   ```
   # Uninstall old package if needed
   pip uninstall mcp_journal -y
   # Install new package
   pip install -e .
   ```

3. Run the full test suite to ensure all functionality works with the new package name:
   ```
   pytest
   ```

4. Verify imports work in a new Python environment:
   ```python
   from mcp_commit_story import *
   # Test basic functionality
   ```

5. Check that any CLI commands or entry points still function:
   ```
   mcp-commit-story --version  # or whatever the command is
   ```

6. Run CI/CD pipelines to ensure they pass with the new package name

# Subtasks:
## 1. Rename source directory and update package imports [done]
### Dependencies: None
### Description: Rename the source directory from 'src/mcp_journal/' to 'src/mcp_commit_story/' and update all internal import statements within the package.
### Details:
1. Create a new directory 'src/mcp_commit_story/'
2. Copy all files from 'src/mcp_journal/' to 'src/mcp_commit_story/'
3. Update all import statements within the package files that reference 'mcp_journal' to 'mcp_commit_story'
4. Ensure __init__.py and package structure is maintained
5. Do not delete the original directory yet
<info added on 2025-05-20T13:06:27.064Z>
3. Update all test files in tests/unit/ that reference mcp_journal to use mcp_commit_story:
   - test_journal.py: from mcp_journal import journal â†’ from mcp_commit_story import journal
   - test_git_utils.py, test_config.py: update all from mcp_journal... and patch('mcp_journal...') to mcp_commit_story
   - test_imports.py: update MODULES list
   - test_structure.py: update REQUIRED_DIRS and REQUIRED_FILES lists
4. Run all tests to confirm that imports fail (TDD: confirm the rename is needed and breaks tests).
5. Once confirmed, proceed to update the rest of the codebase and tests to use the new package name.

Note: No internal imports in the package source files reference mcp_journal, so only test files need updating. __init__.py and placeholder files will be copied as-is.
</info added on 2025-05-20T13:06:27.064Z>

## 2. Update test files and external imports [done]
### Dependencies: None
### Description: Update all import statements in test files and any examples or documentation code to reference the new package name.
### Details:
1. Identify all test files in the 'tests/' directory
2. Update all import statements from 'mcp_journal' to 'mcp_commit_story'
3. Check for any example code in documentation or standalone examples
4. Update imports in those files as well
5. Run tests to verify they pass with the new imports
<info added on 2025-05-20T13:14:13.864Z>
1. Search the entire codebase for any remaining references to 'mcp_journal', including:
   - All test files in the 'tests/' directory
   - Documentation files (e.g., .md, .rst)
   - Example code in scripts, docs, or root files
   - Configuration files (e.g., pyproject.toml, .gitignore)
2. For each match, update import statements and references from 'mcp_journal' to 'mcp_commit_story'.
3. For documentation and sample code, update code blocks and prose to use the new package name.
4. Run the full test suite to verify all tests pass and no import errors remain.
5. Confirm that all documentation, config, and example code is consistent with the new package name.
6. Log any non-trivial changes or issues encountered in the subtask details.
</info added on 2025-05-20T13:14:13.864Z>

## 3. Update package configuration in pyproject.toml [done]
### Dependencies: None
### Description: Modify pyproject.toml to reflect the new package name, including package metadata and entry points.
### Details:
1. Update the package name in the [project] section
2. Update any references in dependencies or dev dependencies
3. Update entry points in [project.scripts] section
4. Update any other metadata that references the old package name
5. Verify the package can still be installed locally with pip install -e .
<info added on 2025-05-20T13:18:51.016Z>
1. Update the package name in the [project] section of pyproject.toml from 'mcp-journal' to 'mcp-commit-story'.
2. Review and update any references to the old package name in dependencies, dev dependencies, and entry points ([project.scripts]).
3. Update any other metadata fields (description, authors, etc.) if they reference the old name.
4. Save and close pyproject.toml.
5. Run 'pip install -e .' to verify the package installs correctly with the new name and entry points.
6. Test the CLI entry point (e.g., 'mcp-commit-story --help') to ensure it works as expected.
7. Log any issues or non-trivial changes encountered in the subtask details.
</info added on 2025-05-20T13:18:51.016Z>

## 4. Update documentation and configuration files [pending]
### Dependencies: None
### Description: Update README.md, configuration files, and check for hardcoded references to the package name in various locations.
### Details:
1. Update README.md with the new package name
2. Rename configuration files like .mcp-journalrc.yaml to .mcp-commit-storyrc.yaml
3. Update any hardcoded references to 'mcp_journal' in:
   - CLI commands
   - Configuration files
   - Environment variables
   - Log messages
4. Check for any other documentation files that need updating

## 5. Update CI/CD configuration and clean up [pending]
### Dependencies: None
### Description: Update any CI/CD configuration files that reference the package name and remove the old package directory after verifying everything works.
### Details:
1. Update any GitHub workflow files in .github/workflows/
2. Check for any other CI/CD configuration that might reference the old name
3. Run a full verification of the package functionality
4. Once everything is confirmed working, delete the original 'src/mcp_journal/' directory
5. Verify the package still works after removal of the old directory

