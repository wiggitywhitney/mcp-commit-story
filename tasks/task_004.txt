# Task ID: 4
# Title: Implement Telemetry System
# Status: pending
# Dependencies: 1, 2
# Priority: medium
# Description: Set up OpenTelemetry integration for tracing, metrics, and logging to provide observability for the MCP server.
# Details:
Implement telemetry system in `src/mcp_journal/telemetry.py` with the following features:

1. OpenTelemetry setup:
```python
from opentelemetry import trace
from opentelemetry.sdk.trace import TracerProvider
from opentelemetry.sdk.trace.export import BatchSpanProcessor
from opentelemetry.exporter.otlp.proto.grpc.trace_exporter import OTLPSpanExporter
from opentelemetry.sdk.resources import SERVICE_NAME, Resource

def setup_telemetry(config):
    """Initialize OpenTelemetry based on configuration"""
    if not config.get("telemetry.enabled", True):
        return
        
    service_name = config.get("telemetry.service_name", "mcp-journal")
    resource = Resource(attributes={SERVICE_NAME: service_name})
    
    tracer_provider = TracerProvider(resource=resource)
    trace.set_tracer_provider(tracer_provider)
    
    # Configure exporters based on config
    # ...
```

2. Tracing utilities:
```python
def get_tracer(name="mcp_journal"):
    """Get a tracer for the specified name"""
    return trace.get_tracer(name)

def trace_operation(name):
    """Decorator for tracing operations"""
    def decorator(func):
        @functools.wraps(func)
        def wrapper(*args, **kwargs):
            tracer = get_tracer()
            with tracer.start_as_current_span(name):
                return func(*args, **kwargs)
        return wrapper
    return decorator
```

3. Metrics collection:
```python
# Setup metrics collection for key operations
# Track operation duration, success/failure, etc.
```

4. Logging integration:
```python
import logging

def setup_logging(debug=False):
    """Configure logging with appropriate levels"""
    level = logging.DEBUG if debug else logging.INFO
    logging.basicConfig(level=level)
    # Additional logging configuration
```

# Test Strategy:
1. Unit tests for telemetry initialization
2. Tests for tracing decorator functionality
3. Tests for metrics collection
4. Tests for logging configuration
5. Mock telemetry exporters for testing
6. Verify telemetry can be disabled via configuration
